{"ast":null,"code":"import absFloor from '../utils/abs-floor';\nimport { cloneWithOffset } from '../units/offset';\nimport { normalizeUnits } from '../units/aliases';\nexport function diff(input, units, asFloat) {\n  var that, zoneDelta, output;\n\n  if (!this.isValid()) {\n    return NaN;\n  }\n\n  that = cloneWithOffset(input, this);\n\n  if (!that.isValid()) {\n    return NaN;\n  }\n\n  zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n  units = normalizeUnits(units);\n\n  switch (units) {\n    case 'year':\n      output = monthDiff(this, that) / 12;\n      break;\n\n    case 'month':\n      output = monthDiff(this, that);\n      break;\n\n    case 'quarter':\n      output = monthDiff(this, that) / 3;\n      break;\n\n    case 'second':\n      output = (this - that) / 1e3;\n      break;\n    // 1000\n\n    case 'minute':\n      output = (this - that) / 6e4;\n      break;\n    // 1000 * 60\n\n    case 'hour':\n      output = (this - that) / 36e5;\n      break;\n    // 1000 * 60 * 60\n\n    case 'day':\n      output = (this - that - zoneDelta) / 864e5;\n      break;\n    // 1000 * 60 * 60 * 24, negate dst\n\n    case 'week':\n      output = (this - that - zoneDelta) / 6048e5;\n      break;\n    // 1000 * 60 * 60 * 24 * 7, negate dst\n\n    default:\n      output = this - that;\n  }\n\n  return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff(a, b) {\n  if (a.date() < b.date()) {\n    // end-of-month calculations work correct when the start month has more\n    // days than the end month.\n    return -monthDiff(b, a);\n  } // difference in months\n\n\n  var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n      // b is in (anchor - 1 month, anchor + 1 month)\n  anchor = a.clone().add(wholeMonthDiff, 'months'),\n      anchor2,\n      adjust;\n\n  if (b - anchor < 0) {\n    anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n    adjust = (b - anchor) / (anchor - anchor2);\n  } else {\n    anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n    adjust = (b - anchor) / (anchor2 - anchor);\n  } //check for negative zero, return zero if negative zero\n\n\n  return -(wholeMonthDiff + adjust) || 0;\n}","map":{"version":3,"names":["absFloor","cloneWithOffset","normalizeUnits","diff","input","units","asFloat","that","zoneDelta","output","isValid","NaN","utcOffset","monthDiff","a","b","date","wholeMonthDiff","year","month","anchor","clone","add","anchor2","adjust"],"sources":["/Users/soorena/projects/shared-theme/node_modules/moment/src/lib/moment/diff.js"],"sourcesContent":["import absFloor from '../utils/abs-floor';\nimport { cloneWithOffset } from '../units/offset';\nimport { normalizeUnits } from '../units/aliases';\n\nexport function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    switch (units) {\n        case 'year':\n            output = monthDiff(this, that) / 12;\n            break;\n        case 'month':\n            output = monthDiff(this, that);\n            break;\n        case 'quarter':\n            output = monthDiff(this, that) / 3;\n            break;\n        case 'second':\n            output = (this - that) / 1e3;\n            break; // 1000\n        case 'minute':\n            output = (this - that) / 6e4;\n            break; // 1000 * 60\n        case 'hour':\n            output = (this - that) / 36e5;\n            break; // 1000 * 60 * 60\n        case 'day':\n            output = (this - that - zoneDelta) / 864e5;\n            break; // 1000 * 60 * 60 * 24, negate dst\n        case 'week':\n            output = (this - that - zoneDelta) / 6048e5;\n            break; // 1000 * 60 * 60 * 24 * 7, negate dst\n        default:\n            output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff(a, b) {\n    if (a.date() < b.date()) {\n        // end-of-month calculations work correct when the start month has more\n        // days than the end month.\n        return -monthDiff(b, a);\n    }\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}