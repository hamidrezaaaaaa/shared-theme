{"ast":null,"code":"export function createDate(y, m, d, h, M, s, ms) {\n  // can't just apply() to create a date:\n  // https://stackoverflow.com/q/181348\n  var date; // the date constructor remaps years 0-99 to 1900-1999\n\n  if (y < 100 && y >= 0) {\n    // preserve leap years using a full 400 year cycle, then reset\n    date = new Date(y + 400, m, d, h, M, s, ms);\n\n    if (isFinite(date.getFullYear())) {\n      date.setFullYear(y);\n    }\n  } else {\n    date = new Date(y, m, d, h, M, s, ms);\n  }\n\n  return date;\n}\nexport function createUTCDate(y) {\n  var date, args; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n  if (y < 100 && y >= 0) {\n    args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n    args[0] = y + 400;\n    date = new Date(Date.UTC.apply(null, args));\n\n    if (isFinite(date.getUTCFullYear())) {\n      date.setUTCFullYear(y);\n    }\n  } else {\n    date = new Date(Date.UTC.apply(null, arguments));\n  }\n\n  return date;\n}","map":{"version":3,"names":["createDate","y","m","d","h","M","s","ms","date","Date","isFinite","getFullYear","setFullYear","createUTCDate","args","Array","prototype","slice","call","arguments","UTC","apply","getUTCFullYear","setUTCFullYear"],"sources":["/Users/soorena/projects/shared-theme/node_modules/moment/src/lib/create/date-from-array.js"],"sourcesContent":["export function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date;\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n        // preserve leap years using a full 400 year cycle, then reset\n        date = new Date(y + 400, m, d, h, M, s, ms);\n        if (isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n    } else {\n        date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n}\n\nexport function createUTCDate(y) {\n    var date, args;\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n        args = Array.prototype.slice.call(arguments);\n        // preserve leap years using a full 400 year cycle, then reset\n        args[0] = y + 400;\n        date = new Date(Date.UTC.apply(null, args));\n        if (isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n    } else {\n        date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n}\n"],"mappings":"AAAA,OAAO,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,CAA1B,EAA6BC,CAA7B,EAAgCC,CAAhC,EAAmCC,CAAnC,EAAsCC,EAAtC,EAA0C;EAC7C;EACA;EACA,IAAIC,IAAJ,CAH6C,CAI7C;;EACA,IAAIP,CAAC,GAAG,GAAJ,IAAWA,CAAC,IAAI,CAApB,EAAuB;IACnB;IACAO,IAAI,GAAG,IAAIC,IAAJ,CAASR,CAAC,GAAG,GAAb,EAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2BC,CAA3B,EAA8BC,CAA9B,EAAiCC,EAAjC,CAAP;;IACA,IAAIG,QAAQ,CAACF,IAAI,CAACG,WAAL,EAAD,CAAZ,EAAkC;MAC9BH,IAAI,CAACI,WAAL,CAAiBX,CAAjB;IACH;EACJ,CAND,MAMO;IACHO,IAAI,GAAG,IAAIC,IAAJ,CAASR,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2BC,EAA3B,CAAP;EACH;;EAED,OAAOC,IAAP;AACH;AAED,OAAO,SAASK,aAAT,CAAuBZ,CAAvB,EAA0B;EAC7B,IAAIO,IAAJ,EAAUM,IAAV,CAD6B,CAE7B;;EACA,IAAIb,CAAC,GAAG,GAAJ,IAAWA,CAAC,IAAI,CAApB,EAAuB;IACnBa,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAP,CADmB,CAEnB;;IACAL,IAAI,CAAC,CAAD,CAAJ,GAAUb,CAAC,GAAG,GAAd;IACAO,IAAI,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACW,GAAL,CAASC,KAAT,CAAe,IAAf,EAAqBP,IAArB,CAAT,CAAP;;IACA,IAAIJ,QAAQ,CAACF,IAAI,CAACc,cAAL,EAAD,CAAZ,EAAqC;MACjCd,IAAI,CAACe,cAAL,CAAoBtB,CAApB;IACH;EACJ,CARD,MAQO;IACHO,IAAI,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACW,GAAL,CAASC,KAAT,CAAe,IAAf,EAAqBF,SAArB,CAAT,CAAP;EACH;;EAED,OAAOX,IAAP;AACH"},"metadata":{},"sourceType":"module"}