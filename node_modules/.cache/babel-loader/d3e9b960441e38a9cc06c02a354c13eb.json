{"ast":null,"code":"import absFloor from '../utils/abs-floor';\nimport absCeil from '../utils/abs-ceil';\nexport function bubble() {\n  var milliseconds = this._milliseconds,\n      days = this._days,\n      months = this._months,\n      data = this._data,\n      seconds,\n      minutes,\n      hours,\n      years,\n      monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n  // check: https://github.com/moment/moment/issues/2166\n\n  if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n    days = 0;\n    months = 0;\n  } // The following code bubbles up values, see the tests for\n  // examples of what that means.\n\n\n  data.milliseconds = milliseconds % 1000;\n  seconds = absFloor(milliseconds / 1000);\n  data.seconds = seconds % 60;\n  minutes = absFloor(seconds / 60);\n  data.minutes = minutes % 60;\n  hours = absFloor(minutes / 60);\n  data.hours = hours % 24;\n  days += absFloor(hours / 24); // convert days to months\n\n  monthsFromDays = absFloor(daysToMonths(days));\n  months += monthsFromDays;\n  days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n  years = absFloor(months / 12);\n  months %= 12;\n  data.days = days;\n  data.months = months;\n  data.years = years;\n  return this;\n}\nexport function daysToMonths(days) {\n  // 400 years have 146097 days (taking into account leap year rules)\n  // 400 years have 12 months === 4800\n  return days * 4800 / 146097;\n}\nexport function monthsToDays(months) {\n  // the reverse of daysToMonths\n  return months * 146097 / 4800;\n}","map":{"version":3,"names":["absFloor","absCeil","bubble","milliseconds","_milliseconds","days","_days","months","_months","data","_data","seconds","minutes","hours","years","monthsFromDays","monthsToDays","daysToMonths"],"sources":["/Users/soorena/projects/shared-theme/node_modules/moment/src/lib/duration/bubble.js"],"sourcesContent":["import absFloor from '../utils/abs-floor';\nimport absCeil from '../utils/abs-ceil';\n\nexport function bubble() {\n    var milliseconds = this._milliseconds,\n        days = this._days,\n        months = this._months,\n        data = this._data,\n        seconds,\n        minutes,\n        hours,\n        years,\n        monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (\n        !(\n            (milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0)\n        )\n    ) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days = days;\n    data.months = months;\n    data.years = years;\n\n    return this;\n}\n\nexport function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return (days * 4800) / 146097;\n}\n\nexport function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return (months * 146097) / 4800;\n}\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAO,SAASC,MAAT,GAAkB;EACrB,IAAIC,YAAY,GAAG,KAAKC,aAAxB;EAAA,IACIC,IAAI,GAAG,KAAKC,KADhB;EAAA,IAEIC,MAAM,GAAG,KAAKC,OAFlB;EAAA,IAGIC,IAAI,GAAG,KAAKC,KAHhB;EAAA,IAIIC,OAJJ;EAAA,IAKIC,OALJ;EAAA,IAMIC,KANJ;EAAA,IAOIC,KAPJ;EAAA,IAQIC,cARJ,CADqB,CAWrB;EACA;;EACA,IACI,EACKZ,YAAY,IAAI,CAAhB,IAAqBE,IAAI,IAAI,CAA7B,IAAkCE,MAAM,IAAI,CAA7C,IACCJ,YAAY,IAAI,CAAhB,IAAqBE,IAAI,IAAI,CAA7B,IAAkCE,MAAM,IAAI,CAFjD,CADJ,EAKE;IACEJ,YAAY,IAAIF,OAAO,CAACe,YAAY,CAACT,MAAD,CAAZ,GAAuBF,IAAxB,CAAP,GAAuC,KAAvD;IACAA,IAAI,GAAG,CAAP;IACAE,MAAM,GAAG,CAAT;EACH,CAtBoB,CAwBrB;EACA;;;EACAE,IAAI,CAACN,YAAL,GAAoBA,YAAY,GAAG,IAAnC;EAEAQ,OAAO,GAAGX,QAAQ,CAACG,YAAY,GAAG,IAAhB,CAAlB;EACAM,IAAI,CAACE,OAAL,GAAeA,OAAO,GAAG,EAAzB;EAEAC,OAAO,GAAGZ,QAAQ,CAACW,OAAO,GAAG,EAAX,CAAlB;EACAF,IAAI,CAACG,OAAL,GAAeA,OAAO,GAAG,EAAzB;EAEAC,KAAK,GAAGb,QAAQ,CAACY,OAAO,GAAG,EAAX,CAAhB;EACAH,IAAI,CAACI,KAAL,GAAaA,KAAK,GAAG,EAArB;EAEAR,IAAI,IAAIL,QAAQ,CAACa,KAAK,GAAG,EAAT,CAAhB,CArCqB,CAuCrB;;EACAE,cAAc,GAAGf,QAAQ,CAACiB,YAAY,CAACZ,IAAD,CAAb,CAAzB;EACAE,MAAM,IAAIQ,cAAV;EACAV,IAAI,IAAIJ,OAAO,CAACe,YAAY,CAACD,cAAD,CAAb,CAAf,CA1CqB,CA4CrB;;EACAD,KAAK,GAAGd,QAAQ,CAACO,MAAM,GAAG,EAAV,CAAhB;EACAA,MAAM,IAAI,EAAV;EAEAE,IAAI,CAACJ,IAAL,GAAYA,IAAZ;EACAI,IAAI,CAACF,MAAL,GAAcA,MAAd;EACAE,IAAI,CAACK,KAAL,GAAaA,KAAb;EAEA,OAAO,IAAP;AACH;AAED,OAAO,SAASG,YAAT,CAAsBZ,IAAtB,EAA4B;EAC/B;EACA;EACA,OAAQA,IAAI,GAAG,IAAR,GAAgB,MAAvB;AACH;AAED,OAAO,SAASW,YAAT,CAAsBT,MAAtB,EAA8B;EACjC;EACA,OAAQA,MAAM,GAAG,MAAV,GAAoB,IAA3B;AACH"},"metadata":{},"sourceType":"module"}